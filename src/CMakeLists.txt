set(my_targets sliprock sliprock_static)
add_library(sliprock_static STATIC sliprock.c randombytes_sysrandom.c poll.c state_machine.c SHA256.c)
add_library(sliprock SHARED sliprock.c randombytes_sysrandom.c poll.c state_machine.c SHA256.c)

if (WIN32)
   target_link_libraries(${my_targets} userenv advapi32)
endif()

if (SLIPROCK_ENABLE_TEST)
   # Check if tests are enabled
   set(CMAKE_CXX_STANDARD 11)
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
   enable_testing()
   find_package(Boost REQUIRED COMPONENTS unit_test_framework)
   add_executable(mytest test.cpp)
   include_directories(${Boost_INCLUDE_DIRS})
   target_link_libraries(mytest Threads::Threads sliprock_static)
   if (NOT MSVC)
      target_link_libraries(mytest ${Boost_LIBRARIES})
   endif()
   if (WIN32)
      target_link_libraries(mytest -static-libstdc++ -static-libgcc)
      if (CMAKE_BUILD_TYPE MATCHES "Debug")
         set(SLIPROCK_DEBUG_OR_RELEASE RELEASE)
      else()
         set(SLIPROCK_DEBUG_OR_RELEASE DEBUG)
      endif()
      set(sliprock_boost_lib "${Boost_UNIT_TEST_FRAMEWORK_LIBRARY_${SLIPROCK_DEBUG_OR_RELEASE}}")
      message("${sliprock_boost_lib}")
      message("${CMAKE_CURRENT_BINARY_DIR}")
      if (CMAKE_GENERATOR MATCHES "Visual Studio")
         set(bindir "${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_BUILD_TYPE}")
      else()
         set(bindir "${CMAKE_CURRENT_BINARY_DIR}")
      endif()
      if (sliprock_boost_lib MATCHES "\\.lib$")
         string(REGEX REPLACE "\\.lib$" ".dll" sliprock_boost_lib "${sliprock_boost_lib}")
         message(Copying boost lib)
         file(COPY "${sliprock_boost_lib}" DESTINATION "${bindir}")
         install(FILES "${sliprock_boost_lib}" DESTINATION "${CMAKE_INSTALL_LIBDIR}")
      endif()
   elseif (THREADS_HAVE_PTHREAD_ARG)
      target_link_libraries(mytest -pthread)
   endif()
   list(APPEND my_targets mytest)
   add_test(main mytest)
endif()

if (THREADS_FOUND)
   foreach(i ${my_targets})
      if (THREADS_HAVE_PTHREAD_ARG)
         target_compile_options("${i}" PUBLIC "-pthread")
      endif()
      if (CMAKE_THREAD_LIBS_INIT)
         target_link_libraries("${i}" "${CMAKE_THREAD_LIBS_INIT}")
      endif()
   endforeach()
else()
   message(WARNING "no thread package - SlipRock initializiation will be thread-unsafe")
endif()

install(TARGETS sliprock sliprock_static DESTINATION "${CMAKE_INSTALL_LIBDIR}")
