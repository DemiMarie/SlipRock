set(CMAKE_EXPORT_COMPILE_COMMANDS 1)
cmake_minimum_required(VERSION 2.8.7)
project(sliprock)
enable_language(C CXX)
include(GNUInstallDirs)
include_directories(include)
set(THREADS_PREFER_PTHREAD_FLAG 1)
find_package(Threads)
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/Modules")
if(WINDOWS)
   add_definitions(-DUNICODE -D_UNICODE)
endif()

set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -O0")
set(both_flag_list error all extra everything no-padded
        no-gnu-statement-expression format=2 strict-aliasing=5 strict-overflow=5)

if (WINDOWS)
  list(APPEND both_flag_list -static-libgcc -static-libstdc++)
endif()

include(CheckCCompilerFlag)

foreach(my_flag ${both_flag_list} no-c++-compat)
  check_c_compiler_flag(-W${my_flag} "W${my_flag}_works")
  if (W${my_flag}_works)
    string(APPEND CMAKE_C_FLAGS " -W${my_flag}")
  endif()
endforeach()

find_package(Boost COMPONENTS unit_test_framework)

find_package(Threads)
if (THREADS_FOUND)
    find_package(Boost COMPONENTS unit_test_framework)
    if (Boost_UNIT_TEST_FRAMEWORK_FOUND AND NOT DEFINED SLIPROCK_NO_TESTS)
        enable_language(CXX)
        set(SLIPROCK_ENABLE_TEST ON)
        set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0")
        include(CheckCXXCompilerFlag)
        foreach(flag ${both_flag_list} no-old-style-cast
            no-c++98-compat no-global-constructors no-c99-extensions)
            check_cxx_compiler_flag(-W${flag} -W${flag}_works)
            if (-W${flag}_works)
                string(APPEND CMAKE_CXX_FLAGS " -W${flag}")
            endif()
        endforeach()
    else()
        message(WARNING "Tests disabled")
    endif()
else()
    message(WARNING "No thread library found.  Disabling thread-safety and unit-testing.")
    add_definitions(-DSLIPROCK_NO_THREADS)
endif()

add_subdirectory(src)
if (SLIPROCK_ENABLE_WIP)
   add_subdirectory(wip)
endif()
install(FILES include/sliprock.h DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")
