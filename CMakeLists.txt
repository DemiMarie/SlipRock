set(CMAKE_EXPORT_COMPILE_COMMANDS 1)
cmake_minimum_required(VERSION 3.1)
project(sliprock)
enable_language(C CXX)
include(GNUInstallDirs)
include_directories(include)
set(THREADS_PREFER_PTHREAD_FLAG 1)
find_package(Threads)
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/Modules")
if (UNIX)
   find_package(Sodium REQUIRED)
elseif(WINDOWS)
   add_definitions(-DUNICODE -D_UNICODE -static-libgcc -static-libstdc++)
endif()
find_package(GTest)

set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -O0")

if (CMAKE_C_COMPILER_ID MATCHES "(Apple)?Clang")
   set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Weverything -Werror -Wno-padded -Wno-gnu-statement-expression")
elseif(CMAKE_C_COMPILER_ID STREQUAL "GNU")
   set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -Werror -Wstrict-aliasing=5 -Wformat=2 -Wstrict-overflow=5")
endif()
if (GTEST_FOUND)
   enable_language(CXX)
   set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0")
   if (CMAKE_CXX_COMPILER_ID MATCHES "(Apple)?Clang")
      set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Weverything -Werror -Wno-padded -Wno-gnu-statement-expression -Wno-old-style-cast -Wno-c++98-compat -Wno-global-constructors -Wno-c99-extensions")
   elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
      set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -Werror -Wstrict-aliasing=5 -Wformat=2 -Wstrict-overflow=5")
   endif()
endif()
add_subdirectory(src)
if (SLIPROCK_ENABLE_WIP)
   add_subdirectory(wip)
endif()
install(FILES include/sliprock.h DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")
